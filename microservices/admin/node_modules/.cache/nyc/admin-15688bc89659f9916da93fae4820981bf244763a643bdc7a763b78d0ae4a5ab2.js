function cov_1dpkye6lgx(){var path="C:\\Users\\Surbhi bhor\\Desktop\\Case study\\microservices\\admin\\admin.js";var hash="d20cbe61afd0d1e89c5659a2a5725aa6a2f91318";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Surbhi bhor\\Desktop\\Case study\\microservices\\admin\\admin.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:34}},"1":{start:{line:3,column:12},end:{line:3,column:21}},"2":{start:{line:4,column:14},end:{line:4,column:30}},"3":{start:{line:6,column:19},end:{line:6,column:41}},"4":{start:{line:7,column:21},end:{line:7,column:39}},"5":{start:{line:8,column:0},end:{line:8,column:27}},"6":{start:{line:11,column:21},end:{line:11,column:45}},"7":{start:{line:12,column:18},end:{line:12,column:47}},"8":{start:{line:15,column:13},end:{line:15,column:28}},"9":{start:{line:16,column:0},end:{line:16,column:49}},"10":{start:{line:21,column:23},end:{line:35,column:3}},"11":{start:{line:37,column:22},end:{line:37,column:50}},"12":{start:{line:38,column:2},end:{line:38,column:71}},"13":{start:{line:39,column:2},end:{line:39,column:26}},"14":{start:{line:82,column:0},end:{line:93,column:2}},"15":{start:{line:84,column:4},end:{line:92,column:6}},"16":{start:{line:86,column:8},end:{line:86,column:31}},"17":{start:{line:89,column:8},end:{line:91,column:9}},"18":{start:{line:90,column:12},end:{line:90,column:22}},"19":{start:{line:119,column:0},end:{line:130,column:2}},"20":{start:{line:121,column:4},end:{line:129,column:6}},"21":{start:{line:123,column:8},end:{line:123,column:31}},"22":{start:{line:126,column:8},end:{line:128,column:9}},"23":{start:{line:127,column:12},end:{line:127,column:22}},"24":{start:{line:155,column:0},end:{line:172,column:2}},"25":{start:{line:156,column:20},end:{line:162,column:5}},"26":{start:{line:163,column:4},end:{line:171,column:6}},"27":{start:{line:164,column:8},end:{line:164,column:31}},"28":{start:{line:168,column:8},end:{line:170,column:9}},"29":{start:{line:169,column:12},end:{line:169,column:22}},"30":{start:{line:199,column:0},end:{line:210,column:2}},"31":{start:{line:200,column:4},end:{line:209,column:6}},"32":{start:{line:201,column:8},end:{line:201,column:43}},"33":{start:{line:202,column:8},end:{line:202,column:32}},"34":{start:{line:206,column:8},end:{line:208,column:9}},"35":{start:{line:207,column:12},end:{line:207,column:22}},"36":{start:{line:246,column:0},end:{line:256,column:2}},"37":{start:{line:247,column:4},end:{line:255,column:6}},"38":{start:{line:248,column:8},end:{line:248,column:39}},"39":{start:{line:250,column:8},end:{line:250,column:32}},"40":{start:{line:252,column:8},end:{line:254,column:9}},"41":{start:{line:253,column:12},end:{line:253,column:22}},"42":{start:{line:261,column:0},end:{line:263,column:2}},"43":{start:{line:262,column:4},end:{line:262,column:60}},"44":{start:{line:265,column:0},end:{line:265,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:82,column:25},end:{line:82,column:26}},loc:{start:{line:82,column:37},end:{line:93,column:1}},line:82},"1":{name:"(anonymous_1)",decl:{start:{line:84,column:52},end:{line:84,column:53}},loc:{start:{line:84,column:65},end:{line:88,column:5}},line:84},"2":{name:"(anonymous_2)",decl:{start:{line:88,column:14},end:{line:88,column:15}},loc:{start:{line:88,column:23},end:{line:92,column:5}},line:88},"3":{name:"(anonymous_3)",decl:{start:{line:119,column:37},end:{line:119,column:38}},loc:{start:{line:119,column:49},end:{line:130,column:1}},line:119},"4":{name:"(anonymous_4)",decl:{start:{line:121,column:79},end:{line:121,column:80}},loc:{start:{line:121,column:92},end:{line:125,column:5}},line:121},"5":{name:"(anonymous_5)",decl:{start:{line:125,column:14},end:{line:125,column:15}},loc:{start:{line:125,column:23},end:{line:129,column:5}},line:125},"6":{name:"(anonymous_6)",decl:{start:{line:155,column:26},end:{line:155,column:27}},loc:{start:{line:155,column:38},end:{line:172,column:1}},line:155},"7":{name:"(anonymous_7)",decl:{start:{line:163,column:63},end:{line:163,column:64}},loc:{start:{line:163,column:76},end:{line:167,column:5}},line:163},"8":{name:"(anonymous_8)",decl:{start:{line:167,column:14},end:{line:167,column:15}},loc:{start:{line:167,column:23},end:{line:171,column:5}},line:167},"9":{name:"(anonymous_9)",decl:{start:{line:199,column:40},end:{line:199,column:41}},loc:{start:{line:199,column:52},end:{line:210,column:1}},line:199},"10":{name:"(anonymous_10)",decl:{start:{line:200,column:78},end:{line:200,column:79}},loc:{start:{line:200,column:91},end:{line:205,column:5}},line:200},"11":{name:"(anonymous_11)",decl:{start:{line:205,column:14},end:{line:205,column:15}},loc:{start:{line:205,column:23},end:{line:209,column:5}},line:205},"12":{name:"(anonymous_12)",decl:{start:{line:246,column:29},end:{line:246,column:30}},loc:{start:{line:246,column:41},end:{line:256,column:1}},line:246},"13":{name:"(anonymous_13)",decl:{start:{line:247,column:78},end:{line:247,column:79}},loc:{start:{line:247,column:91},end:{line:251,column:5}},line:247},"14":{name:"(anonymous_14)",decl:{start:{line:251,column:14},end:{line:251,column:15}},loc:{start:{line:251,column:23},end:{line:255,column:5}},line:251},"15":{name:"(anonymous_15)",decl:{start:{line:261,column:17},end:{line:261,column:18}},loc:{start:{line:261,column:23},end:{line:263,column:1}},line:261}},branchMap:{"0":{loc:{start:{line:89,column:8},end:{line:91,column:9}},type:"if",locations:[{start:{line:89,column:8},end:{line:91,column:9}},{start:{line:89,column:8},end:{line:91,column:9}}],line:89},"1":{loc:{start:{line:126,column:8},end:{line:128,column:9}},type:"if",locations:[{start:{line:126,column:8},end:{line:128,column:9}},{start:{line:126,column:8},end:{line:128,column:9}}],line:126},"2":{loc:{start:{line:168,column:8},end:{line:170,column:9}},type:"if",locations:[{start:{line:168,column:8},end:{line:170,column:9}},{start:{line:168,column:8},end:{line:170,column:9}}],line:168},"3":{loc:{start:{line:206,column:8},end:{line:208,column:9}},type:"if",locations:[{start:{line:206,column:8},end:{line:208,column:9}},{start:{line:206,column:8},end:{line:208,column:9}}],line:206},"4":{loc:{start:{line:252,column:8},end:{line:254,column:9}},type:"if",locations:[{start:{line:252,column:8},end:{line:254,column:9}},{start:{line:252,column:8},end:{line:254,column:9}}],line:252}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d20cbe61afd0d1e89c5659a2a5725aa6a2f91318"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1dpkye6lgx=function(){return actualCoverage;};}return actualCoverage;}cov_1dpkye6lgx();//load express
const express=(cov_1dpkye6lgx().s[0]++,require("express"));const app=(cov_1dpkye6lgx().s[1]++,express());const axios=(cov_1dpkye6lgx().s[2]++,require("axios"));const bodyParser=(cov_1dpkye6lgx().s[3]++,require("body-parser"));const{response}=(cov_1dpkye6lgx().s[4]++,require("express"));cov_1dpkye6lgx().s[5]++;app.use(bodyParser.json());//load swagger
const swaggerJsDoc=(cov_1dpkye6lgx().s[6]++,require("swagger-jsdoc"));const swaggerUi=(cov_1dpkye6lgx().s[7]++,require("swagger-ui-express"));//load cors
const cors=(cov_1dpkye6lgx().s[8]++,require('cors'));cov_1dpkye6lgx().s[9]++;app.use(cors({origin:'http://localhost:4200'}));// ---------------------------------------------------------------------------------------------------------------------------------------------
//                 SWAGGER DOCUMENTATION
// Extended: https://swagger.io/specification/#infoObject
const swaggerOptions=(cov_1dpkye6lgx().s[10]++,{swaggerDefinition:{info:{version:"1.0.0",title:"Admin API",description:"Admin API Information",contact:{name:"Surbhi"},servers:["http://localhost:7777"]}},// ['.routes/*.js']
apis:["admin.js"]});const swaggerDocs=(cov_1dpkye6lgx().s[11]++,swaggerJsDoc(swaggerOptions));cov_1dpkye6lgx().s[12]++;app.use("/api-admin",swaggerUi.serve,swaggerUi.setup(swaggerDocs));cov_1dpkye6lgx().s[13]++;app.use(express.json());/**
   * @swagger
   * definitions:
   *  Flight:
   *   type: object
   *   properties:
   *    flightCode:
   *      type: string
   *      description: code of the flight
   *      example: 'SC101'
   *    airline:
   *      type: string
   *      description: name of the airline
   *      example: 'SpiceJet'
   *    source:
   *      type: string
   *      description: source
   *      example: 'mumbai'
   *    destination:
   *      type: string
   *      description: Destination
   *      example: 'delhi'
   *    fare:
   *      type: number
   *      description: fare of the flight
   *      example: 2000
   *    
   */ //---------------------------------------------------------------------------------------------------------------------------------------------
// 1] Get all the flights in db
/**
 * @swagger
 * /admin/flight:
 *  get:
 *    tags:
 *       - Admin
 *    description: Used to get all flights in database
 *    responses:
 *      '200':
 *        description: Listed all the flights available in flightData Db
 */cov_1dpkye6lgx().s[14]++;app.get('/admin/flight',(req,res)=>{cov_1dpkye6lgx().f[0]++;cov_1dpkye6lgx().s[15]++;axios.get('http://localhost:4545/flights').then(response=>{cov_1dpkye6lgx().f[1]++;cov_1dpkye6lgx().s[16]++;res.json(response.data);// res.json("Listed all the flights");
}).catch(err=>{cov_1dpkye6lgx().f[2]++;cov_1dpkye6lgx().s[17]++;if(err){cov_1dpkye6lgx().b[0][0]++;cov_1dpkye6lgx().s[18]++;throw err;}else{cov_1dpkye6lgx().b[0][1]++;}});});//---------------------------------------------------------------------------------------------------------------------------------------------
// 2] List the flights from flight microservice by its code
/**
 * @swagger
 * /admin/flight/{flightCode}:
 *  get:
 *    tags:
 *       - Admin
 *    summary: Fetch a flight.
 *    description: Used to fetch a single flight
 *    responses:
 *      '200':
 *        description: Successfully fetched flight
 *      '500':
 *        description: Server error
 *  parameters:
 *       - in: path
 *         name: flightCode
 *         required: true
 *         schema:
 *           type: String
 *         description: The flight code
 */cov_1dpkye6lgx().s[19]++;app.get('/admin/flight/:flightCode',(req,res)=>{cov_1dpkye6lgx().f[3]++;cov_1dpkye6lgx().s[20]++;axios.get('http://localhost:4545/flightCode/'+req.params.flightCode).then(response=>{cov_1dpkye6lgx().f[4]++;cov_1dpkye6lgx().s[21]++;res.json(response.data);// res.json("Listed all the flights");
}).catch(err=>{cov_1dpkye6lgx().f[5]++;cov_1dpkye6lgx().s[22]++;if(err){cov_1dpkye6lgx().b[1][0]++;cov_1dpkye6lgx().s[23]++;throw err;}else{cov_1dpkye6lgx().b[1][1]++;}});});//---------------------------------------------------------------------------------------------------------------------------------------------
// 3] Add new flight in flight microservice
/**
 * @swagger
 * /admin/flight:
 *   post:
 *     tags:
 *       - Admin
 *     description: Creates a new flight
 *     produces:
 *       - application/json
 *     parameters:
 *       - name: flight
 *         description: Flight object
 *         in: body
 *         required: true
 *         schema:
 *           $ref: '#/definitions/Flight'
 *     responses:
 *       200:
 *         description: Successfully created
 */cov_1dpkye6lgx().s[24]++;app.post('/admin/flight',(req,res)=>{cov_1dpkye6lgx().f[6]++;var newFlight=(cov_1dpkye6lgx().s[25]++,{flightCode:req.body.flightCode,airline:req.body.airline,source:req.body.source,destination:req.body.destination,fare:req.body.fare});cov_1dpkye6lgx().s[26]++;axios.post('http://localhost:4545/flight',newFlight).then(response=>{cov_1dpkye6lgx().f[7]++;cov_1dpkye6lgx().s[27]++;res.json(response.data);//console.log(response.data);
//res.send("New flight added successfully");
}).catch(err=>{cov_1dpkye6lgx().f[8]++;cov_1dpkye6lgx().s[28]++;if(err){cov_1dpkye6lgx().b[2][0]++;cov_1dpkye6lgx().s[29]++;throw err;}else{cov_1dpkye6lgx().b[2][1]++;}});});//---------------------------------------------------------------------------------------------------------------------------------------------
// 4] delete flights from flight microservice
/**
 * @swagger
 * /admin/flight/{flightCode}:
 *  delete:
 *    tags:
 *       - Admin
 *    summary: Delete a flight.
 *    description: Used to delete a flight
 *    responses:
 *      '200':
 *        description: Successfully deleted flight
 *      '500':
 *        description: Server error
 *  parameters:
 *       - in: path
 *         name: flightCode
 *         required: true
 *         schema:
 *           type: String
 *         description: The flight code
 */cov_1dpkye6lgx().s[30]++;app.delete('/admin/flight/:flightCode',(req,res)=>{cov_1dpkye6lgx().f[9]++;cov_1dpkye6lgx().s[31]++;axios.delete('http://localhost:4545/flight/'+req.params.flightCode).then(response=>{cov_1dpkye6lgx().f[10]++;cov_1dpkye6lgx().s[32]++;console.log(req.params.flightCode);cov_1dpkye6lgx().s[33]++;res.send(response.data);//console.log(response.data);
//res.json("Deleted the required flight");
}).catch(err=>{cov_1dpkye6lgx().f[11]++;cov_1dpkye6lgx().s[34]++;if(err){cov_1dpkye6lgx().b[3][0]++;cov_1dpkye6lgx().s[35]++;throw err;}else{cov_1dpkye6lgx().b[3][1]++;}});});//---------------------------------------------------------------------------------------------------------------------------------------------
// 5] Update flights from flight microservice
/**
 * @swagger
 * /admin/flight/{id}:
 *   put:
 *     tags:
 *       - Admin
 *     description: Creates a new flight
 *     produces:
 *       - application/json
 *     parameters:
 *       - name: id
 *         description: flight object id
 *         in: path
 *         required: true
 *         schema:
 *          type: string
 *          description: user's object id
 *       - name: flight
 *         description: Flight object
 *         in: body
 *         required: true
 *         schema:
 *           $ref: '#/definitions/Flight'
 *     responses:
 *       200:
 *         description: Flight Successfully updated
 *       400:
 *         description: Server Error
 */cov_1dpkye6lgx().s[36]++;app.put('/admin/flight/:id',(req,res)=>{cov_1dpkye6lgx().f[12]++;cov_1dpkye6lgx().s[37]++;axios.put('http://localhost:4545/flight/'+req.params.id,req.body).then(response=>{cov_1dpkye6lgx().f[13]++;cov_1dpkye6lgx().s[38]++;console.log("Flight Updated!");cov_1dpkye6lgx().s[39]++;res.send(response.data);}).catch(err=>{cov_1dpkye6lgx().f[14]++;cov_1dpkye6lgx().s[40]++;if(err){cov_1dpkye6lgx().b[4][0]++;cov_1dpkye6lgx().s[41]++;throw err;}else{cov_1dpkye6lgx().b[4][1]++;}});});//---------------------------------------------------------------------------------------------------------------------------------------------
//listen to the port
cov_1dpkye6lgx().s[42]++;app.listen(7777,()=>{cov_1dpkye6lgx().f[15]++;cov_1dpkye6lgx().s[43]++;console.log("Up and running this is our admin service");});cov_1dpkye6lgx().s[44]++;module.exports=app;// app.delete('/admin/flight/:id', (req,res)=> {
//     axios.delete('http://localhost:4545/flight/'+ req.params.id).then((response)=> {
//         console.log(response.data);
//         res.json("Deleted the required flight");
//     }).catch ((err) => {
//         if(err){
//             throw err;
//         }
//     })
// })
// app.get('/admin/flight/:id', (req,res)=> {
//     axios.get('http://localhost:4545/flight/'+ req.params.id).then((response)=> {
//         res.json(response.data)
//        // res.json("Listed all the flights");
//     }).catch ((err) => {
//         if(err){
//             throw err;
//         }
//     })
// })
// app.put('/admin/flight/:flightCode', (req,res)=> {
//     axios.put('http://localhost:4545/flight/'+ req.params.flightCode , req.body).then((response)=> {
//         console.log(response.data);
//         res.json("Updated the required flight");
//     }).catch ((err) => {
//         if(err){
//             throw err;
//         }
//     })
// })
//# sourceMappingURL=data:application/json;charset=utf-8;base64,